ingress-nginx:
  controller:
    # Enable the controller to run
    enabled: true

    # Set the number of replicas for high availability (adjust based on your cluster size)
    # For a small home lab, 1 or 2 might be sufficient.
    replicaCount: 2

    # Recommend using a DaemonSet for Raspberry Pi clusters to ensure the controller
    # runs on all (or specific) nodes, and expose NodePorts directly.
    # If you prefer a Deployment + LoadBalancer service (if you have a metalLB or similar),
    # then change kind to 'Deployment' and service.type to 'LoadBalancer'.
    kind: DaemonSet
    daemonset:
      useHostPort: true # Essential for NodePort/HostPort on DaemonSet for external access

    # Configure the service to expose the Ingress Controller
    service:
      enabled: true
      # For DaemonSet with useHostPort: true, NodePort is often simplest for external router forwarding.
      # If using a Deployment and have MetalLB, you could use LoadBalancer.
      type: NodePort
      ports:
        http: 80
        https: 443
      # If using NodePort, you can specify fixed ports for easy router forwarding.
      # Otherwise, Kubernetes will assign random ones.
      nodePorts:
        http: "30080" # Example NodePort for HTTP
        https: "30443" # Example NodePort for HTTPS
      # externalTrafficPolicy: Local # Keep source IP (requires extra config if DaemonSet is not on all nodes)

    # Resources for Raspberry Pi nodes (adjust based on your specific Pi model and usage)
    # Ingress NGINX can be CPU intensive for high traffic.
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
      limits:
        cpu: 500m
        memory: 256Mi

    # Enable host network if you want the pod to use the host's network namespace.
    # This can simplify some networking, but has security implications. Usually not needed
    # if using NodePort/DaemonSet with useHostPort.
    # hostNetwork: false

    # Add any specific NGINX configuration snippets you might need globally
    # For example, to increase body size limit:
    # config:
    #   client-max-body-size: "100m"
    #   proxy-buffer-size: "16k"

    # Default backend for handling requests that don't match any Ingress rule.
    # Recommended to have one, can be a simple 404 server.
    # This chart usually deploys a default backend automatically.
    defaultBackend:
      enabled: true

  # Enable or disable the admission webhook (recommended to keep enabled)
  admissionWebhooks:
    enabled: true
    port: 8443 # Default webhook port

  # Metrics (Prometheus) configuration (optional)
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true # For Prometheus Operator

  # RBAC settings (usually enabled by default and recommended)
  rbac:
    create: true

