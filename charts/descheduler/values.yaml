descheduler:

  # Default values for descheduler.
  # This is a YAML-formatted file.
  # Declare variables to be passed into your templates.

  # CronJob or Deployment
  kind: CronJob

  # timeZone: Etc/UTC

  # deschedulerPolicy contains the policies the descheduler will execute.
  deschedulerPolicy:
    # nodeSelector: "key1=value1,key2=value2"
    # maxNoOfPodsToEvictPerNode: 10
    # maxNoOfPodsToEvictPerNamespace: 10
    # metricsProviders:
    # - source: KubernetesMetrics
    # tracing:
    #   collectorEndpoint: otel-collector.observability.svc.cluster.local:4317
    #   transportCert: ""
    #   serviceName: ""
    #   serviceNamespace: ""
    #   sampleRate: 1.0
    #   fallbackToNoOpProviderOnError: true
    profiles:
      - name: default
        pluginConfig:
          - name: DefaultEvictor
            args:
              ignorePvcPods: true
              evictLocalStoragePods: true
          - name: RemoveDuplicates
          - name: RemovePodsHavingTooManyRestarts
            args:
              podRestartThreshold: 100
              includingInitContainers: true
          - name: RemovePodsViolatingNodeAffinity
            args:
              nodeAffinityType:
              - requiredDuringSchedulingIgnoredDuringExecution
          - name: RemovePodsViolatingNodeTaints
          - name: RemovePodsViolatingInterPodAntiAffinity
          - name: RemovePodsViolatingTopologySpreadConstraint
          - name: LowNodeUtilization
            args:
              thresholds:
                cpu: 20
                memory: 20
                pods: 20
              targetThresholds:
                cpu: 50
                memory: 50
                pods: 50
        plugins:
          balance:
            enabled:
              - RemoveDuplicates
              - RemovePodsViolatingTopologySpreadConstraint
              - LowNodeUtilization
          deschedule:
            enabled:
              - RemovePodsHavingTooManyRestarts
              - RemovePodsViolatingNodeTaints
              - RemovePodsViolatingNodeAffinity
              - RemovePodsViolatingInterPodAntiAffinity

  nodeSelector: {}
  #  foo: bar

  serviceMonitor:
    enabled: false
    # The namespace where Prometheus expects to find service monitors.
    # namespace: ""
    # Add custom labels to the ServiceMonitor resource
    additionalLabels: {}
      # prometheus: kube-prometheus-stack
    interval: ""
    # honorLabels: true
    insecureSkipVerify: true
    serverName: null
    metricRelabelings: []
      # - action: keep
      #   regex: 'descheduler_(build_info|pods_evicted)'
      #   sourceLabels: [__name__]
    relabelings: []
      # - sourceLabels: [__meta_kubernetes_pod_node_name]
      #   separator: ;
      #   regex: ^(.*)$
      #   targetLabel: nodename
      #   replacement: $1
      #   action: replace

