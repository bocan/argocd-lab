keycloakx:
  image:
    # The Keycloak image repository
    repository: quay.io/keycloak/keycloak
    # Overrides the Keycloak image tag whose default is the chart appVersion
    tag: "26.3.3"

  command:
    - "/opt/keycloak/bin/kc.sh"
    - "start"
    - "--http-port=8080"
    - "--hostname-strict=false"

  # Keycloak runtime flags / env
  extraEnv: |
    - name: KC_PROXY
      value: edge
    - name: KC_HOSTNAME
      value: keycloak.funderburg.uk
    - name: KC_METRICS_ENABLED
      value: "true"
    - name: JAVA_OPTS_APPEND
      value: >-
        -Djgroups.dns.query={{ include "keycloak.fullname" . }}-headless

  # Pod resource requests and limits
  resources:
    requests:
      cpu: "500m"
      memory: "1024Mi"
    limits:
      cpu: "500m"
      memory: "1024Mi"

  ingress:
    # If `true`, an Ingress is created
    enabled: true
    # The name of the Ingress Class associated with this ingress
    ingressClassName: "traefik"
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      external-dns.alpha.kubernetes.io/host: "keycloak.funderburg.uk"

    rules:
      - # Ingress host
        host: "keycloak.funderburg.uk"
        # Paths for the host
        paths:
          - path: "/"
            pathType: Prefix
    # TLS configuration
    tls:
      - hosts:
          - keycloak.funderburg.uk
        secretName: "keycloak-cert"

  database:
    # Supply your own Service/Secret or external endpoint
    existingSecret: "external-database"
    existingSecretKey: "password"
    vendor: postgres
    host: postgres.postgres.svc.cluster.local
    port: 5432
    username: keycloak
    database: keycloak

  proxy:
    enabled: true
    mode: forwarded
    http:
      enabled: true

  metrics:
    enabled: true

  health:
    enabled: true

  http:
    # For backwards compatibility reasons we set this to the value used by previous Keycloak versions.
    relativePath: "/auth"
    internalPort: http-internal
    internalScheme: HTTP

  serviceMonitor:
    enabled: true
    labels:
      release: kube-prometheus-stack
